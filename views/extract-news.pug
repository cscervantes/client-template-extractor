extends layout
block css
    style.
        * {
            font-size: 10px;
        }
block content
    if title == 'NewsRecap'
        button(onclick="Export2Doc('contentD', 'NewsRecap')") Export as Document
    else
        button(onclick="Export2Doc('contentD', 'GovRel')") Export as Document
    div#contentD
        h5= title
        br
        each i, k in data
            if k == 'business'
                h1(style="color:red;") #{k.toUpperCase()} / Industry News
            else
                h1(style="color:red;")=k.toUpperCase()
            each v in i
                h1.pub_name(style="display:none")=v.pub_name
                a(href=v.article_link, style="text-decoration:underline; color:black")
                    h3=v.article_title.toUpperCase()
                    small=v.article_published
                    br
                if v.article_image
                    img(src=v.article_image, width=400, height=300)
                div.t_txt=v.article_text
    script(src="/javascripts/truncatise.js")
    script(src="/javascripts/sentence-tokenizer.js")
    script(src="/javascripts/string.js")
    script.
        $(document).ready(function(){
            var Tokenizer = require('sentence-tokenizer');
            var tokenizer = new Tokenizer('Chuck');
            var truncatise = require('truncatise');
            var S = require('string')

            var opts = {
                TruncateLength: 5,
                TruncateBy : "paragraphs",
                Strict : false,
                StripHTML : false,
                // Suffix : ' (Read More)'
                Suffix: ''
            }
            
            //- console.log(tokenizer.getSentences())
            $('div.t_txt').each(function(i, e){
                var txt = $(this).text()
                tokenizer.setEntry(txt)
                var token = tokenizer.getSentences(txt).map(e => e).join('\n\n').split('\n\n')
                var paragraph = ''
                for(var p = 0; p < token.length; p++){
                    if(p % 2 == 0){
                        paragraph += `<p>${token[p]} ${token[p-1]}</p>`
                    }
                }
                $(this).html(S(truncatise(S(paragraph).replaceAll('undefined', '').s, opts)).ensureRight(` (${$(this).siblings('h1.pub_name').eq(i).text()})`).s)
            })
            
        })

//-   code= JSON.stringify(data, null, 4)
